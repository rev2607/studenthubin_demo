@model StudentHubMVC.Liason.EntityLayer.InstructorEN

@{
    ViewBag.Title = "Save Instructor";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>@ViewBag.Title</h2>

<div>
    @Html.ActionLink("Back to List", "InstructorsManager")
</div>

@using (Html.BeginForm("AddSaveInstructor", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />

        @if (ViewBag.SaveMessage != "" && ViewBag.SaveMessage != null)
        {
            <div class="message">@ViewBag.SaveMessage</div>
        }


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @if (ViewBag.ID != null && ViewBag.ID != "")
        {
            <input class="form-control text-box single-line" id="Sno" name="Sno" type="text" value="@ViewBag.ID" style="display: none;">
        }

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @*<input type="number" name="age" id="age" class="form-control" value="@Model.Age" />*@
                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @required = "required", @type = "number", @min = "18", @max = "99" } })
                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.Education, new List<SelectListItem>
                   {
                       new SelectListItem { Value = "GRADUATION", Text = "Graduation" },
                       new SelectListItem { Value = "POSTGRADUATION", Text = "Post-Graduation" }
                   }, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                   {
                       new SelectListItem { Value = "MALE", Text = "Male" },
                       new SelectListItem { Value = "FEMALE", Text = "Female" }
                   }, "Select", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.WorkExperience, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.WorkExperience, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkExperience, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.CurrentWorkPosition, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.CurrentWorkPosition, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentWorkPosition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control", @type = "date", @min = "1900-01-01" } })
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Email2, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Email2, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
                @Html.ValidationMessageFor(model => model.Email2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <label class="control-label">Confirm Password</label>
            </div>
            <div class="col-md-4">
                <input class="form-control" id="ConfirmPassword" name="ConfirmPassword" type="password">
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Phone1, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Phone1, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Phone1, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Phone2, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Phone2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.StatusUser, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.StatusUser, new List<SelectListItem>
                   {
                       //new SelectListItem { Value = "NEW", Text = "New" },
                       new SelectListItem { Value = "ACTIVE", Text = "Active" },
                       new SelectListItem { Value = "INACTIVE", Text = "InActive" },
                       new SelectListItem { Value = "BLOCKED", Text = "Blocked" }
                   }, "Select", new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.StatusUser, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.Featured, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.Featured, new List<SelectListItem>
                       {
                           new SelectListItem { Value = "NO", Text = "No" },
                           new SelectListItem { Value = "YES", Text = "Yes" }
                       }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Featured, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.FacebookLink, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.FacebookLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FacebookLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.TwitterLink, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.TwitterLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TwitterLink, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.LinkedinLink, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.LinkedinLink, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkedinLink, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6" style="padding: 0px;">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.ProfilePic, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <input type="file" title="search image" id="ProfilePicUpload" name="ProfilePicUpload" class="form-control" onchange="show(this)" />
                </div>
                <div class="col-md-offset-4 col-md-8" style="padding-top: 20px;">
                    <div>

                        @if (@Model != null)
                        {
                            if (Model.ProfilePic != null && Model.ProfilePic != "")
                            {
                                <img src="/assets/img/profilepics/@Url.Content(@Model.ProfilePic)" alt="Course" name="ProfilePic" id="ProfilePic" style="width: 100px;" />
                            }
                        }
                        else
                        {
                            <img src="/assets/img/profilepics/noimage.png" alt="Image" name="ProfilePic" id="ProfilePic" />
                        }
                        @Html.EditorFor(model => model.ProfilePic, new { htmlAttributes = new { @style = "display: none;" } })
                        @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })

                    </div>
                </div>

            </div>

            @*<div class="col-md-6" style="padding: 0px;">
                <div class="col-md-4">
                    @Html.LabelFor(model => model.CoverPic, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <input type="file" title="search image" id="CoverPicUpload" name="ProfilePicUpload" class="form-control" onchange="show(this)" />
                </div>
                <div class="col-md-offset-4 col-md-8" style="padding-top: 20px;">
                    <div>

                        @if (@Model != null)
                        {
                            if (Model.ProfilePic != null && Model.CoverPic != "")
                            {
                                <img src="/assets/img/courselogos/@Url.Content(@Model.CoverPic)" alt="Course" name="CoverPic" id="CoverPic" style="width: 100px;" />
                            }
                        }
                        else
                        {
                            <img src="../assets/img/profilepics/noimage.png" alt="Image" name="CoverPic" id="CoverPic" />
                        }
                        @Html.EditorFor(model => model.ProfilePic, new { htmlAttributes = new { @style = "display: none;" } })
                        @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })

                    </div>
                </div>

            </div>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-4">
                <input type="submit" value="SAVE INSTRUCTOR" class="btn btn-success" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "InstructorsManager")
</div>
