@model StudentHubMVC.QuestionPapers

@{
    ViewBag.Title = "SaveQuestionPapers";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    var courses = new Entities().MainCourses.Select(course => new SelectListItem { Text = course.Name, Value = course.MainCourseId.ToString() });
}

<div style="width: 100%;">
    <div style="padding: 10px 0px 15px 0px; width: 80%; display: inline-block;">
        <div style="font-size:x-large; display: inline-block;"><u>@Html.ActionLink("Question Papers Manager", "QuestionPapersManager")</u></div>
        &nbsp;>&nbsp;
        <div style="font-size: larger; display: inline-block; font-weight: bold;">Save Question Paper</div>
    </div>
    <div style="padding-top: 10px; width: 19%; display: inline-block;">
            @Html.ActionLink("Add Question Paper", "SaveQuestionPaper", null, new { @class = "newaddbutton" })
    </div>
</div>

@using (Html.BeginForm("SaveQuestionPaper", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="x_panel">
        @*<div class="x_title">

        </div>*@
        <div class="x_content">
            <div class="form-horizontal">

                @if (ViewBag.SaveMessage != "" && ViewBag.SaveMessage != null)
                {
                    <div class="message">@ViewBag.SaveMessage</div>
                }
                @if (Request.Params.AllKeys.Contains("message"))
                {
                    <div class="message">@Request.Params["message"]</div>
                }
                @if (ViewBag.ErrorMessage != "" && ViewBag.ErrorMessage != null)
                {
                    <div class="errormessage">@ViewBag.ErrorMessage</div>
                }
                @if (Request.Params.AllKeys.Contains("errormessage"))
                {
                    <div class="errormessage">@Request.Params["errormessage"]</div>
                }

                @Html.HiddenFor(model => model.QuestionPaperId)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.CourseId, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.CourseId, courses, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Filename, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Filename, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Select Upload File</label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBox("UploadFile", "", new { @type = "file", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Filename, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <hr />

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-offset-8 col-md-1">
                            @Html.ActionLink("Cancel", "SaveQuestionPaper", null, new { @class = "btn btn-primary" })
                        </div>
                        <div class="col-md-2">
                            <input type="submit" value="Save Question Paper" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}

<div>
    @Html.ActionLink("Back to Question Papers Manager", "QuestionPapersManager", null, new { @class = "btn btn-default" })
</div>
