@using PagedList.Mvc;
@using System.Configuration;

@model StudentHubMVC.Models.ViewModels.Home.VMHomeNewsSearch

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutFrontOthers.cshtml";

    List<SelectListItem> newsTypes = new Entities().DropdownTypes.Where(s => s.GroupName == "NEWS").Select(s => new SelectListItem {
        Value = s.DropdownTypeId.ToString(), Text = s.TypeValue
    }).ToList();
}

<style>
    .entry-title {
        font-size: 14px !important;
    }

    .pagination > li > a, .pagination > li > span {
        padding: 8px 16px !important;
        color: #8dc642 !important;
        border: 1px solid #8dc642 !important;
    }

    .pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {
        background-color: #8dc642 !important;
        border-color: #8dc642 !important;
        color: #ffffff !important;
    }
</style>

<!-- Start main-content -->
<div class="main-content">
    <style>
        body {
            background-color: #f1f1f1 !important;
        }
    </style>

    <!-- Section: inner-header -->
    <section class="inner-header mt-110 bg-gray-eee">
        <div class="container pt-5 pb-5">
            <!-- Section Content -->
            <div class="section-content">
                <div class="row">
                    <div class="col-md-12">
                        <ol class="breadcrumb text-left text-black mt-10">
                            <li><a href="#">Home</a></li>
                            <li class="active text-gray-silver">News</li>
                        </ol>
                    </div>
                </div>
            </div>
        </div>
    </section>

    
    <section class="bg-lighter">
        <div class="container">
            <!-- Section: News SEARCH -->
            <div class="section-content">
                @using (Html.BeginForm("index", "News", FormMethod.Get))
                {
                    <div class="row">
                        <div class="">
                            <div class="form-group">
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(model => model.Keyword, new { @placeholder = "SEARCH NEWS", @class = "form-control" })
                                </div>
                                <div class="col-sm-3">
                                    @Html.DropDownListFor(model => model.Type, newsTypes, "ALL", new { @class = "form-control" })
                                </div>
                                <div class="col-sm-1">
                                    <span class="input-group-btn">
                                        <button type="submit" class="btn search-button form-control"><i class="fa fa-search"></i></button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <br />
            <hr />
            <br />

            <!-- Section: News -->
            <div class="section-content">
                <div class="row">
                    @if (Model.NewsAlerts != null)
                    {
                        foreach (NewsAlerts news in Model.NewsAlerts)
                        {
                            <div class="col-xs-12 col-sm-4 col-md-3 wow fadeInLeft" data-wow-duration="1s" data-wow-delay="0.3s" style="padding-bottom: 15px;">
                                <article class="post clearfix mb-sm-30">
                                    <div class="entry-header box-hover-effect">
                                        <div class="effect-wrapper">
                                            <div class="post-thumb thumb">
                                                @if (string.IsNullOrEmpty(news.CoverImage) == false)
                                                {
                                                    <img src="@(ConfigurationManager.AppSettings["NewsPath"].Replace("~/", "/") + news.CoverImage)" alt="" class="img-responsive img-fullwidth" style="height: 112px !important; width: 100% !important;">
                                                }
                                                else
                                                {
                                                    <img src="@(ConfigurationManager.AppSettings["Colleges"].Replace("~/", "/") + "default.jpeg")" alt="" class="img-responsive img-fullwidth" style="height: 112px !important; width: 100% !important;">
                                                }

                                                <div class="overlay-shade"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="entry-content p-0 pr-10" style="min-height: 125px;">
                                        <h4 class="entry-title">
                                            <a href="@Url.Action("details", "News", new { id = news.NewsId })">
                                                @news.Title.Substring(0, news.Title.Length > 90 ? 90 : news.Title.Length)<span style="color: #8BC442;"> ...more</span>
                                            </a>
                                        </h4>
                                        <div class="clearfix"></div>
                                    </div>
                                </article>
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            NO RESULTS FOUND..
                        </div>
                    }
                </div>
            </div>

            <div class="section-content">
                @Html.PagedListPager(Model.NewsAlerts, page => Url.Action("Index", "News", new { page, Keyword = Request.QueryString["Keyword"], Type = Request.QueryString["Type"] }), new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded })
            </div>
        </div>
    </section>
</div>