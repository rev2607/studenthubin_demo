.mainLayout {
    border: solid thin #00c292;
    background: #ffffff;
    margin-top: 25px;
    padding: 15px;
}

.streamSection {
    padding: 15px 5px;
    /*border: solid thin #5ec293;*/
    margin: 10px 0px;
}

.courseButton {
    display: inline-block;
    padding: 0px 5px 5px 0px;
}
.mockTestDetails {
    border-left: solid #00c292;
    padding: 15px;
    box-shadow: 0 2px 5px rgba(0,0,0,.16), 0 2px 10px rgba(0,0,0,.12);
    /*margin-right: 10px;*/
    margin-top: 25px;
}
.mockTestEasy {
    border-left: solid #00c292 !important;
    /*color: #00c292 !important;*/
}
.mockTestMedium {
    border-left: solid #ff9800 !important;
    /*color: #ff9800 !important;*/
}
.mockTestDifficult {
    border-left: solid #f44336 !important;
    /*color: #f44336 !important;*/
}
.noBorder{
    border: none !important;
}
.mockTestSection {
    padding: 15px 5px;
    /*border: solid thin #5ec293;*/
    margin: 10px 0px;
    display: inline-block;
    width: 100%;
}
.questionText {
    border-left: solid #00c292;
    margin-left: 10px;
    padding: 10px;
    line-height: 2;
    background: #f6f8fa;
}
.questionOption {
    padding: 10px;
    margin: 10px;
    background: #F6F8FA;
}
.questionOption input{
    margin-right: 5px;
}
.questionHeaderItem {
    display: inline-block;
    padding: 10px 15px 5px 0px;
}
.questionHeaderItem button {
    font-size: 22px !important;
}
.timer{
    text-align: center;
}
.timerGreen {
    border: solid thin #00c292;
}
.timerRed {
    border: solid thin #f44336;
}
.timerHead {
    padding: 5px;
    background: #F6F8FA;
    font-weight: bold;
}
.timerTime {
    padding: 5px;
    color: white;
    font-size: 18px;
}
.timerGreen .timerTime {
    background: #00c292;
}
.timerRed .timerTime {
    background: #f44336;
}
/* ----------------------------------------------------------- GENERAL */
.noPadRight{
    padding-right: 0px !important;
}
.noPadLeft {
    padding-left: 0px !important;
}
.noPad {
    padding: 0px !important;
}

/* ----------------------------------------------------------- CSS OVERRIDES */
ul.notika-menu-wrap li a {
    color: #fff !important;
    padding: 15px 15px !important;
}
.ntd-ctn {
    top: 10px !important;
    left: 42px !important;
}
.spinner4 {
    left: 36px !important;
}

/* ------------------------------------------------------------ PROGRESS CIRCLES */
/**
 * Inspiration for this project found at:
 * https://markus.oberlehner.net/blog/pure-css-animated-svg-circle-chart
 * 1. The `reverse` animation direction plays the animation backwards
 *    which makes it start at the stroke offset 100 which means displaying
 *    no stroke at all and animating it to the value defined in the SVG
 *    via the inline `stroke-dashoffset` attribute.
 * 2. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround.
 */

.circle-chart {
  width: 110px;
  height: 110px;
}

.circle-chart__circle {
  stroke: #00acc1;
  stroke-width: 2;
  stroke-linecap: square;
  fill: none;
  animation: circle-chart-fill 2s reverse; /* 1 */ 
  transform: rotate(-90deg); /* 2, 3 */
  transform-origin: center; /* 4 */
}

/**
 * 1. Rotate by -90 degree to make the starting point of the
 *    stroke the top of the circle.
 * 2. Scaling mirrors the circle to make the stroke move right
 *    to mark a positive chart value.
 * 3. Using CSS transforms on SVG elements is not supported by Internet Explorer
 *    and Edge, use the transform attribute directly on the SVG element as a
 * .  workaround.
 */

.circle-chart__circle--negative {
  transform: rotate(-90deg) scale(1,-1); /* 1, 2, 3 */
}

.circle-chart__background {
  stroke: #efefef;
  stroke-width: 2;
  fill: none; 
}

.circle-chart__info {
  animation: circle-chart-appear 2s forwards;
  opacity: 0;
  transform: translateY(0.3em);
}

.circle-chart__percent {
  alignment-baseline: central;
  text-anchor: middle;
  font-size: 10px;
}

.circle-chart__subline {
    alignment-baseline: central;
    text-anchor: middle;
    font-size: 3px;
}

.success-stroke {
  stroke: #00C851;
}

.warning-stroke {
  stroke: #ffbb33;
}

.danger-stroke {
  stroke: #ff4444;
}

@keyframes circle-chart-fill {
  to { stroke-dasharray: 0 100; }
}

@keyframes circle-chart-appear {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
